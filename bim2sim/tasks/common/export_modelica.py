from datetime import datetime

from bim2sim.elements.base_elements import ProductBased
from bim2sim.export import modelica
from bim2sim.tasks.base import ITask
# TODO is this obsolete?

class ExportModelica(ITask):
    """Export to Dymola/Modelica"""

    reads = ('libraries', 'elements',)
    final = True

    def run(self, libraries: tuple, elements: dict):
        self.logger.info("Export to Modelica code")
        modelica.Instance.init_factory(libraries)
        export_elements = {inst: modelica.Instance.factory(inst)
                            for inst in elements.values()}

        yield from ProductBased.get_pending_attribute_decisions(
            elements.values())

        for instance in export_elements.values():
            instance.collect_params()
        static_connections = get_static_connections()
        dyn_connections = get_dynamic_connections(export_elements)
        connections = static_connections + dyn_connections

        self.logger.info(
            "Creating Modelica model with %d model elements.",
            len(export_elements),)

        modelica_model = modelica.Model(
            name="bim2sim_"+self.prj_name,
            comment=f"Autogenerated by BIM2SIM on {datetime.now():%Y-%m-%d %H:%M:%S%z}",
            elements=list(export_elements.values()),
            connections=connections,
        )
        modelica_model.save(self.paths.export)