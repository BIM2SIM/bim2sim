model ${model.name} "${model.comment}"
  extends Modelica.Icons.Example;
  import SI = Modelica.Units.SI;

%if unknowns:
  // unknown parameters:
  %for param in unknowns:
  // ${param}
  %endfor
%endif

% for instance in model.elements:
  ${inst(instance)}

% endfor
<%def name="inst(instance)", filter="trim">
  ${instance.path} ${instance.name}\
  %if instance.modelica_export_dict:
(
  %endif
<% i = 0 %>\
  % for par, value in instance.modelica_export_dict.items():
<% i+=1 %>\
    %if par in instance.modelica_records.keys():
        ${par}(${'"missing - replace with meaningful value"' if value is None else value})${"," if i < len(instance.modelica_export_dict) else ")"}
    %else:
        ${par} = ${'"missing - replace with meaningful value"' if value is None else value}${"," if i < len(instance.modelica_export_dict) else ")"}
    %endif
  % endfor
 "${instance.comment}"
    annotation (Placement(transformation(extent={{${instance.position[0]-10},${instance.position[1]-10}},{${instance.position[0]+10},${instance.position[1]+10}}})));
</%def>

// Only for SpawnOfEnergyPlus
// TODO conditional
Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a heatPortOuterCon[${len(model.connections_heat_ports_conv)}]
    annotation (Placement(transformation(extent={{-110,10},{-90,30}})));;
Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a heatPortOuterRad[${len(model.connections_heat_ports_rad)}]
    annotation (Placement(transformation(extent={{-110,-22},{-90,-2}})));

equation
% for con1, con2, pos1, pos2 in model.connections:
  connect(${con1}, ${con2})
    annotation (Line(points={{${pos1[0]},${pos1[1]}},{38,-6}}, color={0,0,127}));;
% endfor

// heatport connections
% for cons in model.connections_heat_ports_conv:
    connect${str(cons).replace("'","")} annotation (Line(points={{0,0},{0,0},{0,0},{0,0},{0,0}}, color={191,0,0}));
% endfor
% for cons in model.connections_heat_ports_rad:
    connect${str(cons).replace("'","")} annotation (Line(points={{0,0},{0,0},{0,0},{0,0},{0,0}}, color={191,0,0}));
% endfor

  annotation (
%if unknowns:
    Diagram(graphics={Text(
      extent={{-100,100},{100,60}},
      lineColor={238,46,47},
      textString="${len(unknowns)} unknown parameters!
see comments for details.")}),
%endif
    experiment(StopTime=36000)
  );
end ${model.name};
