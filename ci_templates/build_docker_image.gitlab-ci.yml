stages:
  - build_docker_base
  - release_docker_base
  - build_docker_plugin
  - release_docker_plugin
  - build_docker_total
  - release_docker_total

variables:
  BIM2SIM_NAME:  "bim2sim"
  BIM2SIM_FLAG: ""
  BIM2SIM_VERSION: 1.0.0


.docker_build:
  image: docker:latest
  services:
    - name: docker:18.09.7-dind
      command: [ "--mtu=1440" ]
  before_script:
    - docker login -u $CI_DEPLOY_TOKEN_USERNAME -p $CI_DEPLOY_TOKEN_PASSWORD $CI_REGISTRY_LOGIN
  script:
    - docker build --build-arg BIM2SIM_FLAG=$BIM2SIM_FLAG --build-arg BIM2SIM_NAME=$BIM2SIM_NAME --build-arg BIM2SIM_VERSION=$BIM2SIM_VERSION -t $CI_REGISTRY/environment:$IMAGE_NAME -f $DOCKERPATH .
  artifacts:
    expire_in: 1 hour
    paths:
      - $CI_REGISTRY/environment:$IMAGE_NAME

.docker_rules:main:
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      when: on_success
    - if: $CI_COMMIT_MESSAGE =~ /ci_build_main/
      when: on_success

.docker_rules:dev:
  rules:
    - if: $CI_COMMIT_BRANCH == "development"
      when: on_success
    - if: $CI_COMMIT_MESSAGE =~ /ci_build_dev/
      when: on_success

docker_build_bim2sim:base:main:
  stage: build_docker_base
  variables:
    BIM2SIM_NAME: "bim2sim"
    BIM2SIM_FLAG: ""
    IMAGE_NAME: "master_base"
    DOCKERPATH: "docker/basic_build/envBase.Dockerfile"
  extends: .docker_build
  rules:
    - !reference [.docker_rules:main, rules ]
    - if: $CI_COMMIT_MESSAGE =~ /ci_build_base_main/
      when: on_success

docker_build_bim2sim:base:dev:
  stage: build_docker_base
  variables:
    BIM2SIM_NAME: "bim2sim"
    BIM2SIM_FLAG: "_dev"
    IMAGE_NAME: "dev_base"
    DOCKERPATH: "docker/basic_build/envBase.Dockerfile"
  extends: .docker_build
  rules:
    - !reference [.docker_rules:dev, rules ]
    - if: $CI_COMMIT_MESSAGE =~ /ci_build_base_dev/
      when: on_success

# [Build docker Plugins]
.docker_rules:plugin:main:
  rules:
     - !reference [.docker_rules:main, rules]
     - if: $CI_COMMIT_MESSAGE =~ /ci_build_plugin_main/
       when: on_success

.docker_rules:plugin:dev:
  rules:
     - !reference [.docker_rules:dev, rules]
     - if: $CI_COMMIT_MESSAGE =~ /ci_build_plugin_dev/
       when: on_success


docker_build_plugin:aixlib:main:
  stage: build_docker_plugin
  variables:
    BIM2SIM_NAME: "bim2sim_aixlib"
    BIM2SIM_FLAG: ""
    IMAGE_NAME: "plugin:aixlib"
    DOCKERPATH: "docker/basic_build/envBase.Dockerfile"
  extends: .docker_build
  rules:
    - !reference [.docker_rules:plugin:main, rules]

docker_build_plugin:aixlib:dev:
  stage: build_docker_plugin
  variables:
    BIM2SIM_NAME: "bim2sim_aixlib"
    BIM2SIM_FLAG: "_dev"
    IMAGE_NAME: "plugin:dev_aixlib"
    DOCKERPATH: "docker/plugins/PluginAixLib/aixlib.Dockerfile"
  extends: .docker_build
  rules:
    - !reference [.docker_rules:plugin:dev, rules]


docker_build_plugin:cfd:main:
  stage: build_docker_plugin
  variables:
    BIM2SIM_NAME: "bim2sim_cfd"
    BIM2SIM_FLAG: ""
    IMAGE_NAME: "plugin:cfd"
    DOCKERPATH: "docker/plugins/PluginCFD/cfd.Dockerfile"
  extends: .docker_build
  rules:
    - !reference [.docker_rules:plugin:main, rules]


docker_build_plugin:cfd:dev:
  stage: build_docker_plugin
  variables:
    BIM2SIM_NAME: "bim2sim_cfd"
    BIM2SIM_FLAG: "_dev"
    IMAGE_NAME: "plugin:dev_cfd"
    DOCKERPATH: "docker/plugins/PluginCFD/cfd.Dockerfile"
  extends: .docker_build
  rules:
    - !reference [.docker_rules:plugin:dev, rules]


docker_build_plugin:energyplus:main:
  stage: build_docker_plugin
  variables:
    BIM2SIM_NAME: "bim2sim_energyplus"
    BIM2SIM_FLAG: ""
    IMAGE_NAME: "plugin:energyplus"
    DOCKERPATH: "docker/plugins/PluginEnergyPlus/energyplus.Dockerfile"
  extends: .docker_build
  rules:
    - !reference [.docker_rules:plugin:main, rules]


docker_build_plugin:energyplus:dev:
  stage: build_docker_plugin
  variables:
    BIM2SIM_NAME: "bim2sim_energyplus"
    BIM2SIM_FLAG: "_dev"
    IMAGE_NAME: "plugin:dev_energyplus"
    DOCKERPATH: "docker/plugins/PluginEnergyPlus/energyplus.Dockerfile"
  extends: .docker_build
  rules:
    - !reference [.docker_rules:plugin:dev, rules]


docker_build_plugin:hkesim:main:
  stage: build_docker_plugin
  variables:
    BIM2SIM_NAME: "bim2sim_hkesim"
    BIM2SIM_FLAG: ""
    IMAGE_NAME: "plugin:hkesim"
    DOCKERPATH: "docker/plugins/PluginEnergyPlus/hkesim.Dockerfile"
  extends: .docker_build
  rules:
    - !reference [.docker_rules:plugin:main, rules]

docker_build_plugin:hkesim:dev:
  stage: build_docker_plugin
  variables:
    BIM2SIM_NAME: "bim2sim_hkesim"
    BIM2SIM_FLAG: "_dev"
    IMAGE_NAME: "plugin:dev_hkesim"
    DOCKERPATH: "docker/plugins/PluginEnergyPlus/hkesim.Dockerfile"
  extends: .docker_build
  rules:
    - !reference [.docker_rules:plugin:dev, rules]


docker_build_plugin:lca:main:
  stage: build_docker_plugin
  variables:
    BIM2SIM_NAME: "bim2sim_lca"
    BIM2SIM_FLAG: ""
    IMAGE_NAME: "plugin:lca"
    DOCKERPATH: "docker/plugins/PluginLCA/lca.Dockerfile"
  extends: .docker_build
  rules:
    - !reference [.docker_rules:plugin:main, rules]


docker_build_plugin:lca:dev:
  stage: build_docker_plugin
  variables:
    BIM2SIM_NAME: "bim2sim_lca"
    BIM2SIM_FLAG: "_dev"
    IMAGE_NAME: "plugin:dev_lca"
    DOCKERPATH: "docker/plugins/PluginLCA/lca.Dockerfile"
  extends: .docker_build
  rules:
    - !reference [.docker_rules:plugin:dev, rules]


docker_build_plugin:teaser:main:
  stage: build_docker_plugin
  variables:
    BIM2SIM_NAME: "bim2sim_teaser"
    BIM2SIM_FLAG: ""
    IMAGE_NAME: "plugin:teaser"
    DOCKERPATH: "docker/plugins/PluginTEASER/teaser.Dockerfile"
  extends: .docker_build
  rules:
    - !reference [.docker_rules:plugin:main, rules]


docker_build_plugin:teaser:dev:
  stage: build_docker_plugin
  variables:
    BIM2SIM_NAME: "bim2sim_teaser"
    BIM2SIM_FLAG: "_dev"
    IMAGE_NAME: "plugin:dev_teaser"
    DOCKERPATH: "docker/plugins/PluginTEASER/teaser.Dockerfile"
  extends: .docker_build
  rules:
    - !reference [.docker_rules:plugin:dev, rules]


.docker_dymola_build:
  image: docker:latest
  services:
      - name: docker:18.09.7-dind
        command: [ "--mtu=1440" ]
  before_script:
    - docker login -u $CI_DEPLOY_TOKEN_USERNAME_DYMOLA -p $CI_DEPLOY_TOKEN_PASSWORD_DYMOLA $CI_REGISTRY_LOGIN_DYMOLA
  script:
    - docker build  --build-arg BIM2SIM_FLAG=$BIM2SIM_FLAG --build-arg BIM2SIM_NAME=$BIM2SIM_NAME --build-arg BIM2SIM_VERSION=$BIM2SIM_VERSION -t $CI_REGISTRY/environment:$IMAGE_NAME -f $DOCKERPATH .
    - docker login -u $CI_DEPLOY_TOKEN_USERNAME -p $CI_DEPLOY_TOKEN_PASSWORD $CI_REGISTRY_LOGIN  # login bim2sim reg
  artifacts:
    expire_in: 1 hour
    paths:
      - $CI_REGISTRY/environment:$IMAGE_NAME

docker_build_bim2sim:env_dymola_base:dev:
  stage: build_docker_base
  variables:
    BIM2SIM_NAME: "bim2sim"
    BIM2SIM_FLAG: "_dev"
    IMAGE_NAME: "dev_dymola"
    DOCKERPATH: "docker/basic_build/envBaseDymola.Dockerfile"
  extends: .docker_dymola_build
  rules:
    - !reference [.docker_rules:dev, rules ]
    - if: $CI_COMMIT_MESSAGE =~ /ci_build_base_dev/
      when: on_success


docker_build_bim2sim:env_dymola_base:main:
  stage: build_docker_base
  variables:
    BIM2SIM_NAME: "bim2sim"
    BIM2SIM_FLAG: ""
    IMAGE_NAME: "master_dymola"
    DOCKERPATH: "docker/basic_build/envBaseDymola.Dockerfile"
  extends: .docker_dymola_build
  rules:
    - !reference [.docker_rules:main, rules ]
    - if: $CI_COMMIT_MESSAGE =~ /ci_build_base_main/
      when: on_success


docker_build_plugin:dymola_teaser:main:
  stage: build_docker_plugin
  variables:
    BIM2SIM_NAME: "bim2sim_teaser"
    BIM2SIM_FLAG: ""
    IMAGE_NAME: "plugin:dymola_teaser"
    DOCKERPATH: "docker/plugins/PluginTEASER/envTEASER-dymola.Dockerfile"
  extends: .docker_dymola_build
  rules:
    - !reference [.docker_rules:plugin:main, rules ]


docker_build_plugin:dymola_teaser:dev:
  stage: build_docker_plugin
  variables:
    BIM2SIM_NAME: "bim2sim_teaser"
    BIM2SIM_FLAG: "_dev"
    IMAGE_NAME: "plugin:dev_dymola_teaser"
    DOCKERPATH: "docker/plugins/PluginTEASER/envTEASER-dymola.Dockerfile"
  extends: .docker_dymola_build
  rules:
    - !reference [.docker_rules:plugin:dev, rules]


docker_build_total:main:
  stage: build_docker_plugin
  variables:
    BIM2SIM_NAME: "bim2sim"
    BIM2SIM_FLAG: ""
    IMAGE_NAME: "latest"
    DOCKERPATH: "docker/total.Dockerfile"
  extends: .docker_dymola_build
  rules:
    - !reference [ .docker_rules:main, rules ]
    - if: $CI_COMMIT_MESSAGE =~ /ci_build_total_main/
      when: on_success

docker_build_total:dev:
  stage: build_docker_plugin
  variables:
    BIM2SIM_NAME: "bim2sim"
    BIM2SIM_FLAG: "_dev"
    IMAGE_NAME: "development"
    DOCKERPATH: "docker/total.Dockerfile"
  extends: .docker_dymola_build
  rules:
    - !reference [ .docker_rules:dev, rules ]
    - if: $CI_COMMIT_MESSAGE =~ /ci_build_total_dev/
      when: on_success

# [Release]

.docker_release:
  image: docker:latest
  services:
      - name: docker:18.09.7-dind
        command: [ "--mtu=1440" ]
  script:
    - docker push $CI_REGISTRY/environment:$DOCKER_IMAGE
  artifacts:
    expire_in: 1 hour
    paths:
      - $CI_REGISTRY/environment:$IMAGE_NAME

docker_release_bim2sim:base:main:
  stage: release_docker_base
  dependencies:
    - docker_build_bim2sim:base:main
  variables:
    DOCKER_IMAGE: "master_base"
  extends: .docker_release
  rules:
    - !reference [ .docker_rules:main, rules ]
    - if: $CI_COMMIT_MESSAGE =~ /ci_build_base_main/
      when: on_success

docker_release_bim2sim:env_base:dev:
  stage: release_docker_base
  dependencies:
    - docker_build_bim2sim:base:dev
  variables:
    DOCKER_IMAGE: "dev_base"
  extends: .docker_release
  rules:
    - !reference [ .docker_rules:dev, rules ]
    - if: $CI_COMMIT_MESSAGE =~ /ci_build_base_dev/
      when: on_success


docker_release_plugin:aixlib:main:
  stage: release_docker_plugin
  dependencies:
    - docker_build_plugin:aixlib:main
  variables:
    DOCKER_IMAGE: "plugin:aixlib"
  extends: .docker_release
  rules:
    - !reference [ .docker_rules:plugin:main, rules ]

docker_release_plugin:aixlib:dev:
  stage: release_docker_plugin
  dependencies:
    - docker_build_plugin:aixlib:dev
  variables:
    DOCKER_IMAGE: "plugin:dev_aixlib"
  extends: .docker_release
  rules:
    - !reference [ .docker_rules:plugin:dev, rules ]

docker_release_plugin:cfd:main:
  stage: release_docker_plugin
  dependencies:
    - docker_build_plugin:cfd:main
  variables:
    DOCKER_IMAGE: "plugin:cfd"
  extends: .docker_release
  rules:
    - !reference [ .docker_rules:plugin:main, rules ]

docker_release_plugin:cfd:dev:
  stage: release_docker_plugin
  dependencies:
    - docker_build_plugin:cfd:dev
  variables:
    DOCKER_IMAGE: "plugin:dev_cfd"
  extends: .docker_release
  rules:
    - !reference [ .docker_rules:plugin:dev, rules ]

docker_release_plugin:energyplus:main:
  stage: release_docker_plugin
  dependencies:
    - docker_build_plugin:energyplus:main
  variables:
    DOCKER_IMAGE: "plugin:energyplus"
  extends: .docker_release
  rules:
    - !reference [ .docker_rules:plugin:main, rules ]

docker_release_plugin:energyplus:dev:
  stage: release_docker_plugin
  dependencies:
    - docker_build_plugin:energyplus:dev
  variables:
    DOCKER_IMAGE: "plugin:dev_energyplus"
  extends: .docker_release
  rules:
    - !reference [ .docker_rules:plugin:dev, rules ]

docker_release_plugin:hkesim:main:
  stage: release_docker_plugin
  dependencies:
    - docker_build_plugin:hkesim:main
  variables:
    DOCKER_IMAGE: "plugin:hkesim"
  extends: .docker_release
  rules:
    - !reference [ .docker_rules:plugin:main, rules ]

docker_release_plugin:hkesim:dev:
  stage: release_docker_plugin
  dependencies:
    - docker_build_plugin:hkesim:dev
  variables:
    DOCKER_IMAGE: "plugin:dev_hkesim"
  extends: .docker_release
  rules:
    - !reference [ .docker_rules:plugin:dev, rules ]

docker_release_plugin:lca:main:
  stage: release_docker_plugin
  dependencies:
    - docker_build_plugin:lca:main
  variables:
    DOCKER_IMAGE: "plugin:lca"
  extends: .docker_release
  rules:
    - !reference [ .docker_rules:plugin:main, rules ]

docker_release_plugin:lca:dev:
  stage: release_docker_plugin
  dependencies:
    - docker_build_plugin:lca:dev
  variables:
    DOCKER_IMAGE: "plugin:dev_lca"
  extends: .docker_release
  rules:
    - !reference [ .docker_rules:plugin:dev, rules ]

docker_release_plugin:teaser:main:
  stage: release_docker_plugin
  dependencies:
    - docker_build_plugin:teaser:main
  variables:
    DOCKER_IMAGE: "plugin:teaser"
  extends: .docker_release
  rules:
    - !reference [ .docker_rules:plugin:main, rules ]

docker_release_plugin:teaser:dev:
  stage: release_docker_plugin
  dependencies:
    - docker_build_plugin:teaser:dev
  variables:
    DOCKER_IMAGE: "plugin:dev_teaser"
  extends: .docker_release
  rules:
    - !reference [ .docker_rules:plugin:dev, rules ]

# [dymola docker release]

docker_release:env_dymola_base:main:
  stage: release_docker_base
  dependencies:
    - docker_build_bim2sim:env_dymola_base:main
  variables:
    DOCKER_IMAGE: "master_dymola"
  extends: .docker_release
  rules:
    - !reference [ .docker_rules:main, rules ]
    - if: $CI_COMMIT_MESSAGE =~ /ci_build_base_main/
      when: on_success


docker_release:env_dymola_base:dev:
  extends: .docker_release
  stage: release_docker_base
  dependencies:
    - docker_build_bim2sim:env_dymola_base:dev
  variables:
    DOCKER_IMAGE: "dev_dymola"
  rules:
    - !reference [.docker_rules:dev, rules ]
    - if: $CI_COMMIT_MESSAGE =~ /ci_build_base_dev/
      when: on_success

docker_release_plugin:dymola_teaser:main:
  stage: release_docker_plugin
  dependencies:
    - docker_build_plugin:dymola_teaser:main
  variables:
    DOCKER_IMAGE: "plugin:dymola_teaser"
  extends: .docker_release
  rules:
    - !reference [ .docker_rules:plugin:main, rules ]

docker_release_plugin:dymola_teaser:dev:
  stage: release_docker_plugin
  dependencies:
    - docker_build_plugin:dymola_teaser:dev
  variables:
    BRANCH:  "development"
    DOCKER_IMAGE: "plugin:dev_dymola_teaser"
  extends: .docker_release
  rules:
    - !reference [ .docker_rules:plugin:dev, rules ]

docker_release_total:main:
  stage:  release_docker_total
  dependencies:
    - docker_build_total:main
  variables:
    DOCKER_IMAGE: "latest"
  extends: .docker_release
  rules:
    - !reference [ .docker_rules:main, rules ]
    - if: $CI_COMMIT_MESSAGE =~ /ci_build_total_main/
      when: on_success

docker_release_total:dev:
  stage:  release_docker_total
  dependencies:
    - docker_build_total:dev
  variables:
    DOCKER_IMAGE: "development"
  extends: .docker_release
  rules:
    - !reference [ .docker_rules:dev, rules ]
    - if: $CI_COMMIT_MESSAGE =~ /ci_build_total_dev/
      when: on_success
