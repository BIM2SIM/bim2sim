stages:
  - build_docker_base
  - release_docker_base
  - build_docker_plugin
  - release_docker_plugin
  - build_docker_total
  - release_docker_total

variables:
  BIM2SIM_NAME:  "bim2sim"
  BIM2SIM_FLAG: ""
  BIM2SIM_VERSION: 0.1.0
  # [Images]
  TEST_IMAGE: ${CI_REGISTRY}/environment:${IMAGE_NAME}_test
  RELEASE_IMAGE: ${CI_REGISTRY}/environment:${IMAGE_NAME}


.docker_build:
  image: docker@sha256:c8bb6fa5388b56304dd770c4bc0478de81ce18540173b1a589178c0d31bfce90
  services:
    - name: docker:18.09.7-dind
      command: [ "--mtu=1440" ]
  before_script:
    - docker login -u $CI_DEPLOY_TOKEN_USERNAME -p $CI_DEPLOY_TOKEN_PASSWORD $CI_REGISTRY_LOGIN
  script:
    - docker build --pull --build-arg BIM2SIM_FLAG=${BIM2SIM_FLAG} --build-arg BIM2SIM_NAME=${BIM2SIM_NAME} --build-arg BIM2SIM_VERSION=${BIM2SIM_VERSION} -t ${TEST_IMAGE} -f ${DOCKERPATH} .
    - docker images
    - docker push ${TEST_IMAGE}

.docker_build_rules:main:
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      when: on_success
    - if: $CI_COMMIT_MESSAGE =~ /ci_build_main/
      when: on_success
    - if: $CI_COMMIT_MESSAGE =~ /ci_build_docker_main/
      when: on_success

.docker_build_rules:dev:
  rules:
    - if: $CI_COMMIT_BRANCH == "development"
      when: on_success
    - if: $CI_COMMIT_MESSAGE =~ /ci_build_dev/
      when: on_success
    - if: $CI_COMMIT_MESSAGE =~ /ci_build_docker_dev/
      when: on_success

docker_build_bim2sim:base:main:
  stage: build_docker_base
  variables:
    BIM2SIM_NAME: "bim2sim"
    BIM2SIM_FLAG: ""
    IMAGE_NAME: "base_master"
    DOCKERPATH: "docker/basic_build/envBase.Dockerfile"
  extends: .docker_build
  rules:
    - !reference [.docker_build_rules:main, rules ]
    - if: $CI_COMMIT_MESSAGE =~ /ci_build_base_main/
      when: on_success

docker_build_bim2sim:base:dev:
  stage: build_docker_base
  variables:
    BIM2SIM_NAME: "bim2sim"
    BIM2SIM_FLAG: "_dev"
    IMAGE_NAME: "base_dev"
    DOCKERPATH: "docker/basic_build/envBase.Dockerfile"
  extends: .docker_build
  rules:
    - !reference [.docker_build_rules:dev, rules ]
    - if: $CI_COMMIT_MESSAGE =~ /ci_build_base_dev/
      when: on_success

# [Build docker Plugins]
.docker_build_rules:plugin:main:
  rules:
     - !reference [.docker_build_rules:main, rules]
     - if: $CI_COMMIT_MESSAGE =~ /ci_build_plugin_main/
       when: on_success

.docker_build_rules:plugin:dev:
  rules:
     - !reference [.docker_build_rules:dev, rules]
     - if: $CI_COMMIT_MESSAGE =~ /ci_build_plugin_dev/
       when: on_success


docker_build_plugin:aixlib:main:
  stage: build_docker_plugin
  variables:
    BIM2SIM_NAME: "bim2sim_aixlib"
    BIM2SIM_FLAG: ""
    IMAGE_NAME: "plugin_aixlib"
    DOCKERPATH: "docker/basic_build/envBase.Dockerfile"
  extends: .docker_build
  rules:
    - !reference [.docker_build_rules:plugin:main, rules]

docker_build_plugin:aixlib:dev:
  stage: build_docker_plugin
  variables:
    BIM2SIM_NAME: "bim2sim_aixlib"
    BIM2SIM_FLAG: "_dev"
    IMAGE_NAME: "plugin_aixlib_dev"
    DOCKERPATH: "docker/basic_build/envBase.Dockerfile"
  extends: .docker_build
  rules:
    - !reference [.docker_build_rules:plugin:dev, rules]


docker_build_plugin:cfd:main:
  stage: build_docker_plugin
  variables:
    BIM2SIM_NAME: "bim2sim_cfd"
    BIM2SIM_FLAG: ""
    IMAGE_NAME: "plugin_cfd"
    DOCKERPATH: "docker/basic_build/envBase.Dockerfile"
  extends: .docker_build
  rules:
    - !reference [.docker_build_rules:plugin:main, rules]


docker_build_plugin:cfd:dev:
  stage: build_docker_plugin
  variables:
    BIM2SIM_NAME: "bim2sim_cfd"
    BIM2SIM_FLAG: "_dev"
    IMAGE_NAME: "plugin_cfd_dev"
    DOCKERPATH: "docker/basic_build/envBase.Dockerfile"
  extends: .docker_build
  rules:
    - !reference [.docker_build_rules:plugin:dev, rules]


docker_build_plugin:energyplus:main:
  stage: build_docker_plugin
  variables:
    BIM2SIM_NAME: "bim2sim_energyplus"
    BIM2SIM_FLAG: ""
    IMAGE_NAME: "plugin_energyplus"
    DOCKERPATH: "docker/basic_build/envBase.Dockerfile"
  extends: .docker_build
  rules:
    - !reference [.docker_build_rules:plugin:main, rules]


docker_build_plugin:energyplus:dev:
  stage: build_docker_plugin
  variables:
    BIM2SIM_NAME: "bim2sim_energyplus"
    BIM2SIM_FLAG: "_dev"
    IMAGE_NAME: "plugin_energyplus_dev"
    DOCKERPATH: "docker/basic_build/envBase.Dockerfile"
  extends: .docker_build
  rules:
    - !reference [.docker_build_rules:plugin:dev, rules]


docker_build_plugin:hkesim:main:
  stage: build_docker_plugin
  variables:
    BIM2SIM_NAME: "bim2sim_hkesim"
    BIM2SIM_FLAG: ""
    IMAGE_NAME: "plugin_hkesim"
    DOCKERPATH: "docker/basic_build/envBase.Dockerfile"
  extends: .docker_build
  rules:
    - !reference [.docker_build_rules:plugin:main, rules]

docker_build_plugin:hkesim:dev:
  stage: build_docker_plugin
  variables:
    BIM2SIM_NAME: "bim2sim_hkesim"
    BIM2SIM_FLAG: "_dev"
    IMAGE_NAME: "plugin_hkesim_dev"
    DOCKERPATH: "docker/basic_build/envBase.Dockerfile"
  extends: .docker_build
  rules:
    - !reference [.docker_build_rules:plugin:dev, rules]


docker_build_plugin:lca:main:
  stage: build_docker_plugin
  variables:
    BIM2SIM_NAME: "bim2sim_lca"
    BIM2SIM_FLAG: ""
    IMAGE_NAME: "plugin_lca"
    DOCKERPATH: "docker/basic_build/envBase.Dockerfile"
  extends: .docker_build
  rules:
    - !reference [.docker_build_rules:plugin:main, rules]


docker_build_plugin:lca:dev:
  stage: build_docker_plugin
  variables:
    BIM2SIM_NAME: "bim2sim_lca"
    BIM2SIM_FLAG: "_dev"
    IMAGE_NAME: "plugin_lca_dev"
    DOCKERPATH: "docker/basic_build/envBase.Dockerfile"
  extends: .docker_build
  rules:
    - !reference [.docker_build_rules:plugin:dev, rules]


docker_build_plugin:teaser:main:
  stage: build_docker_plugin
  variables:
    BIM2SIM_NAME: "bim2sim_teaser"
    BIM2SIM_FLAG: ""
    IMAGE_NAME: "plugin_teaser"
    DOCKERPATH: "docker/basic_build/envBase.Dockerfile"
  extends: .docker_build
  rules:
    - !reference [.docker_build_rules:plugin:main, rules]


docker_build_plugin:teaser:dev:
  stage: build_docker_plugin
  variables:
    BIM2SIM_NAME: "bim2sim_teaser"
    BIM2SIM_FLAG: "_dev"
    IMAGE_NAME: "plugin_teaser_dev"
    DOCKERPATH: "docker/basic_build/envBase.Dockerfile"
  extends: .docker_build
  rules:
    - !reference [.docker_build_rules:plugin:dev, rules]


.docker_dymola_build:
  image: docker@sha256:c8bb6fa5388b56304dd770c4bc0478de81ce18540173b1a589178c0d31bfce90
  services:
      - name: docker:18.09.7-dind
        command: [ "--mtu=1440" ]
  before_script:
    - docker login -u $CI_DEPLOY_TOKEN_USERNAME_DYMOLA -p $CI_DEPLOY_TOKEN_PASSWORD_DYMOLA $CI_REGISTRY_LOGIN_DYMOLA
  script:
    - docker build --pull --build-arg BIM2SIM_FLAG=$BIM2SIM_FLAG --build-arg BIM2SIM_NAME=$BIM2SIM_NAME --build-arg BIM2SIM_VERSION=$BIM2SIM_VERSION -t $TEST_IMAGE -f $DOCKERPATH .
    # docker login -u $CI_DEPLOY_TOKEN_USERNAME -p $CI_DEPLOY_TOKEN_PASSWORD $CI_REGISTRY_LOGIN  # login bim2sim reg
    - docker images
    - docker push $TEST_IMAGE

docker_build_bim2sim:env_dymola_base:dev:
  stage: build_docker_base
  variables:
    BIM2SIM_NAME: "bim2sim"
    BIM2SIM_FLAG: "_dev"
    IMAGE_NAME: "dymola_dev"
    DOCKERPATH: "docker/basic_build/envBaseDymola.Dockerfile"
  extends: .docker_dymola_build
  rules:
    - !reference [.docker_build_rules:dev, rules ]
    - if: $CI_COMMIT_MESSAGE =~ /ci_build_base_dev/
      when: on_success


docker_build_bim2sim:env_dymola_base:main:
  stage: build_docker_base
  variables:
    BIM2SIM_NAME: "bim2sim"
    BIM2SIM_FLAG: ""
    IMAGE_NAME: "dymola_master"
    DOCKERPATH: "docker/basic_build/envBaseDymola.Dockerfile"
  extends: .docker_dymola_build
  rules:
    - !reference [.docker_build_rules:main, rules ]
    - if: $CI_COMMIT_MESSAGE =~ /ci_build_base_main/
      when: on_success


docker_build_plugin:dymola_teaser:main:
  stage: build_docker_plugin
  variables:
    BIM2SIM_NAME: "bim2sim_teaser"
    BIM2SIM_FLAG: ""
    IMAGE_NAME: "plugin_dymola_teaser"
    DOCKERPATH: "docker/basic_build/envBaseDymola.Dockerfile"
  extends: .docker_dymola_build
  rules:
    - !reference [.docker_build_rules:plugin:main, rules ]


docker_build_plugin:dymola_teaser:dev:
  stage: build_docker_plugin
  variables:
    BIM2SIM_NAME: "bim2sim_teaser"
    BIM2SIM_FLAG: "_dev"
    IMAGE_NAME: "plugin_dymola_teaser_dev"
    DOCKERPATH: "docker/basic_build/envBaseDymola.Dockerfile"
  extends: .docker_dymola_build
  rules:
    - !reference [.docker_build_rules:plugin:dev, rules]

docker_build_total:main:
  stage: build_docker_total
  variables:
    BIM2SIM_NAME: "bim2sim"
    BIM2SIM_FLAG: ""
    IMAGE_NAME: "latest"
    DOCKERPATH: "docker/basic_build/envBase.Dockerfile"
  extends: .docker_dymola_build
  rules:
    - !reference [.docker_build_rules:main, rules]
    - if: $CI_COMMIT_MESSAGE =~ /ci_build_total_main/
      when: on_success

docker_build_total:dev:
  stage: build_docker_total
  variables:
    BIM2SIM_NAME: "bim2sim"
    BIM2SIM_FLAG: "_dev"
    IMAGE_NAME: "development"
    DOCKERPATH: "docker/basic_build/envBase.Dockerfile"
  extends: .docker_dymola_build
  rules:
    - !reference [.docker_build_rules:dev, rules]
    - if: $CI_COMMIT_MESSAGE =~ /ci_build_total_dev/
      when: on_success

# [Release]

.docker_release_rules:main:
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      when: on_success
    - if: $CI_COMMIT_MESSAGE =~ /ci_build_main/
      when: manual
    - if: $CI_COMMIT_MESSAGE =~ /ci_build_docker_main/
      when: manual

.docker_release_rules:dev:
  rules:
    - if: $CI_COMMIT_BRANCH == "development"
      when: on_success
    - if: $CI_COMMIT_MESSAGE =~ /ci_build_dev/
      when: manual
    - if: $CI_COMMIT_MESSAGE =~ /ci_build_docker_dev/
      when: manual

.docker_release_rules:plugin:main:
  rules:
     - !reference [.docker_release_rules:main, rules]
     - if: $CI_COMMIT_MESSAGE =~ /ci_build_plugin_main/
       when: manual

.docker_release_rules:plugin:dev:
  rules:
     - !reference [.docker_release_rules:dev, rules]
     - if: $CI_COMMIT_MESSAGE =~ /ci_build_plugin_dev/
       when: manual

.docker_release:
  image: docker:latest
  services:
      - name: docker:18.09.7-dind
        command: [ "--mtu=1440" ]
  script:
    - docker pull $TEST_IMAGE
    - docker tag $TEST_IMAGE $RELEASE_IMAGE
    - docker push $RELEASE_IMAGE

docker_release_bim2sim:base:main:
  stage: release_docker_base
  dependencies:
    - docker_build_bim2sim:base:main
  variables:
    IMAGE_NAME: "base_master"
  extends: .docker_release
  rules:
    - !reference [ .docker_release_rules:main, rules ]
    - if: $CI_COMMIT_MESSAGE =~ /ci_build_base_main/
      when: manual

docker_release_bim2sim:env_base:dev:
  stage: release_docker_base
  dependencies:
    - docker_build_bim2sim:base:dev
  variables:
    IMAGE_NAME: "base_dev"
  extends: .docker_release
  rules:
    - !reference [ .docker_release_rules:dev, rules ]
    - if: $CI_COMMIT_MESSAGE =~ /ci_build_base_dev/
      when: manual


docker_release_plugin:aixlib:main:
  stage: release_docker_plugin
  dependencies:
    - docker_build_plugin:aixlib:main
  variables:
    IMAGE_NAME: "plugin_aixlib"
  extends: .docker_release
  rules:
    - !reference [ .docker_release_rules:plugin:main, rules ]

docker_release_plugin:aixlib:dev:
  stage: release_docker_plugin
  dependencies:
    - docker_build_plugin:aixlib:dev
  variables:
    IMAGE_NAME: "plugin_aixlib_dev"
  extends: .docker_release
  rules:
    - !reference [ .docker_release_rules:plugin:dev, rules ]

docker_release_plugin:cfd:main:
  stage: release_docker_plugin
  dependencies:
    - docker_build_plugin:cfd:main
  variables:
    IMAGE_NAME: "plugin_cfd"
  extends: .docker_release
  rules:
    - !reference [ .docker_release_rules:plugin:main, rules ]

docker_release_plugin:cfd:dev:
  stage: release_docker_plugin
  dependencies:
    - docker_build_plugin:cfd:dev
  variables:
    IMAGE_NAME: "plugin_cfd_dev"
  extends: .docker_release
  rules:
    - !reference [ .docker_release_rules:plugin:dev, rules ]

docker_release_plugin:energyplus:main:
  stage: release_docker_plugin
  dependencies:
    - docker_build_plugin:energyplus:main
  variables:
    IMAGE_NAME: "plugin_energyplus"
  extends: .docker_release
  rules:
    - !reference [ .docker_release_rules:plugin:main, rules ]

docker_release_plugin:energyplus:dev:
  stage: release_docker_plugin
  dependencies:
    - docker_build_plugin:energyplus:dev
  variables:
    IMAGE_NAME: "plugin_energyplus_dev"
  extends: .docker_release
  rules:
    - !reference [ .docker_release_rules:plugin:dev, rules ]

docker_release_plugin:hkesim:main:
  stage: release_docker_plugin
  dependencies:
    - docker_build_plugin:hkesim:main
  variables:
    IMAGE_NAME: "plugin_hkesim"
  extends: .docker_release
  rules:
    - !reference [ .docker_release_rules:plugin:main, rules ]

docker_release_plugin:hkesim:dev:
  stage: release_docker_plugin
  dependencies:
    - docker_build_plugin:hkesim:dev
  variables:
    IMAGE_NAME: "plugin_hkesim_dev"
  extends: .docker_release
  rules:
    - !reference [ .docker_release_rules:plugin:dev, rules ]

docker_release_plugin:lca:main:
  stage: release_docker_plugin
  dependencies:
    - docker_build_plugin:lca:main
  variables:
    IMAGE_NAME: "plugin_lca"
  extends: .docker_release
  rules:
    - !reference [ .docker_release_rules:plugin:main, rules ]

docker_release_plugin:lca:dev:
  stage: release_docker_plugin
  dependencies:
    - docker_build_plugin:lca:dev
  variables:
    IMAGE_NAME: "plugin_lca_dev"
  extends: .docker_release
  rules:
    - !reference [ .docker_release_rules:plugin:dev, rules ]

docker_release_plugin:teaser:main:
  stage: release_docker_plugin
  dependencies:
    - docker_build_plugin:teaser:main
  variables:
    IMAGE_NAME: "plugin_teaser"
  extends: .docker_release
  rules:
    - !reference [ .docker_release_rules:plugin:main, rules ]

docker_release_plugin:teaser:dev:
  stage: release_docker_plugin
  dependencies:
    - docker_build_plugin:teaser:dev
  variables:
    IMAGE_NAME: "plugin_teaser_dev"
  extends: .docker_release
  rules:
    - !reference [ .docker_release_rules:plugin:dev, rules ]

# [dymola docker release]

docker_release:env_dymola_base:main:
  stage: release_docker_base
  dependencies:
    - docker_build_bim2sim:env_dymola_base:main
  variables:
    IMAGE_NAME: "dymola_master"
  extends: .docker_release
  rules:
    - !reference [ .docker_release_rules:main, rules ]
    - if: $CI_COMMIT_MESSAGE =~ /ci_build_base_main/
      when: manual


docker_release:env_dymola_base:dev:
  extends: .docker_release
  stage: release_docker_base
  dependencies:
    - docker_build_bim2sim:env_dymola_base:dev
  variables:
    IMAGE_NAME: "dymola_dev"
  rules:
    - !reference [.docker_release_rules:dev, rules ]
    - if: $CI_COMMIT_MESSAGE =~ /ci_build_base_dev/
      when: manual

docker_release_plugin:dymola_teaser:main:
  stage: release_docker_plugin
  dependencies:
    - docker_build_plugin:dymola_teaser:main
  variables:
    IMAGE_NAME: "plugin_dymola_teaser"
  extends: .docker_release
  rules:
    - !reference [ .docker_release_rules:plugin:main, rules ]

docker_release_plugin:dymola_teaser:dev:
  stage: release_docker_plugin
  dependencies:
    - docker_build_plugin:dymola_teaser:dev
  variables:
    IMAGE_NAME: "plugin_dymola_teaser_dev"
  extends: .docker_release
  rules:
    - !reference [ .docker_release_rules:plugin:dev, rules ]

docker_release_total:main:
  stage:  release_docker_total
  dependencies:
    - docker_build_total:main
  variables:
    IMAGE_NAME: "latest"
  extends: .docker_release
  rules:
    - !reference [ .docker_release_rules:main, rules ]
    - if: $CI_COMMIT_MESSAGE =~ /ci_build_total_main/
      when: manual

docker_release_total:dev:
  stage:  release_docker_total
  dependencies:
    - docker_build_total:dev
  variables:
    IMAGE_NAME: "development"
  extends: .docker_release
  rules:
    - !reference [.docker_release_rules:dev, rules ]
    - if: $CI_COMMIT_MESSAGE =~ /ci_build_total_dev/
      when: manual
