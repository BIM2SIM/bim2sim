stages:
  - code_quality
  - doc
  - deploy
  - test
  - build-env
  - build-env-plugins
  - build-tool
  - visualize

variables:
  PYTHON_VERSION: "registry.git.rwth-aachen.de/ebc/ebc_all/github_ci/bim2sim/environment:development"
  GIT_SUBMODULE_STRATEGY: recursive
  GH_REPO_URL: "git@github.com:BIM2SIM/bim2sim.git"
  GH_PAGES_URL: "https://bim2sim.github.io/${CI_PROJECT_NAME}/"
  TEST_ENGINE: "unittest"
  TEST_PATH: test

include:
  - project: 'EBC/EBC_all/gitlab_ci/templates'
    file: 'python/code-quality/pylint.gitlab-ci.yml'
  - project: 'EBC/EBC_all/gitlab_ci/templates'
    file: 'python/doc/sphinxdoc.gitlab-ci.yml'
  - project: 'EBC/EBC_all/gitlab_ci/templates'
    file: 'pages/gh-pages.gitlab-ci.yml'
  - project: 'EBC/EBC_all/gitlab_ci/templates'
    file: 'python/tests/coverage.gitlab-ci.yml'

.docker_setup: &docker_setup
  image: docker:24.0.5
  services:
    - name: docker:24.0.5-dind
      variables:
        HEALTHCHECK_TCP_PORT: "2376"
  before_script:
    - docker login -u $CI_DEPLOY_TOKEN_USERNAME -p $CI_DEPLOY_TOKEN_PASSWORD $CI_REGISTRY_LOGIN

.build_env_template: &build_env_template
  <<: *docker_setup
  stage: build-env
  rules:
    - if: '$CI_COMMIT_REF_NAME == "development"'
      changes:
        - envBase.Dockerfile
        - requirements.txt
        - .gitlab-ci.yml

build_env:main:
  <<: *docker_setup
  stage: build-env
  before_script:
    - docker login -u $CI_DEPLOY_TOKEN_USERNAME -p $CI_DEPLOY_TOKEN_PASSWORD $CI_REGISTRY_LOGIN
  script:
    - docker build -t $CI_REGISTRY/environment:main -f envBase.Dockerfile .
    - docker push $CI_REGISTRY/environment:main
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'
      changes:
        - envBase.Dockerfile
        - requirements.txt

build_env:development:
  <<: *build_env_template
  script:
    - docker build -t $CI_REGISTRY/environment:development -f envBase.Dockerfile .
    - docker push $CI_REGISTRY/environment:development

build_env:dymola:
  <<: *build_env_template
  before_script:
    - docker login -u $CI_DEPLOY_TOKEN_USERNAME_DYMOLA -p $CI_DEPLOY_TOKEN_PASSWORD_DYMOLA $CI_REGISTRY_LOGIN_DYMOLA
    - docker login -u $CI_DEPLOY_TOKEN_USERNAME -p $CI_DEPLOY_TOKEN_PASSWORD $CI_REGISTRY_LOGIN
  script:
    - docker build -t $CI_REGISTRY/environment:dymola -f envBaseDymola.Dockerfile .
    - docker push $CI_REGISTRY/environment:dymola

build_env:energyplus:
  <<: *build_env_template
  stage: build-env-plugins
  script:
    - docker build -t $CI_REGISTRY/environment:energyplus -f bim2sim/plugins/PluginEnergyPlus/envEP.Dockerfile .
    - docker push $CI_REGISTRY/environment:energyplus
  rules:
    - if: '$CI_COMMIT_REF_NAME == "development"'
      changes:
        - envBase.Dockerfile
        - bim2sim/plugins/PluginEnergyPlus/envEP.Dockerfile
        - bim2sim/plugins/PluginEnergyPlus/requirements.txt
        - requirements.txt
        - .gitlab-ci.yml

build_env:cfd:
  <<: *build_env_template
  stage: build-env-plugins
  script:
    - docker build -t $CI_REGISTRY/environment:cfd -f bim2sim/plugins/PluginCFD/envCFD.Dockerfile .
    - docker push $CI_REGISTRY/environment:cfd
  timeout: 6 hours
  rules:
    - if: '$CI_COMMIT_REF_NAME == "development"'
      changes:
        - envBase.Dockerfile
        - bim2sim/plugins/PluginCFD/envCFD.Dockerfile
        - requirements.txt
        - .gitlab-ci.yml

build_env:teaser:
  <<: *build_env_template
  stage: build-env-plugins
  script:
    - docker build -t $CI_REGISTRY/environment:teaser -f bim2sim/plugins/PluginTEASER/envTEASER.Dockerfile .
    - docker push $CI_REGISTRY/environment:teaser
  rules:
    - if: '$CI_COMMIT_REF_NAME == "development"'
      changes:
        - envBase.Dockerfile
        - bim2sim/plugins/PluginTEASER/requirements.txt
        - bim2sim/plugins/PluginTEASER/envTEASER.Dockerfile
        - requirements.txt
        - .gitlab-ci.yml

build_env:teaser-dymola:
  <<: *build_env_template
  stage: build-env-plugins
  script:
    - docker build -t $CI_REGISTRY/environment:teaser-dymola -f bim2sim/plugins/PluginTEASER/envTEASER-dymola.Dockerfile .
    - docker push $CI_REGISTRY/environment:teaser-dymola
  rules:
    - if: '$CI_COMMIT_REF_NAME == "development"'
      changes:
        - envBase.Dockerfile
        - bim2sim/plugins/PluginTEASER/requirements.txt
        - bim2sim/plugins/PluginTEASER/envTEASER-dymola.Dockerfile
        - requirements.txt
        - .gitlab-ci.yml

build_env:aixlib:
  <<: *build_env_template
  stage: build-env-plugins
  script:
    - docker build -t $CI_REGISTRY/environment:aixlib -f bim2sim/plugins/PluginAixLib/envAixLib.Dockerfile .
    - docker push $CI_REGISTRY/environment:aixlib
  rules:
    - if: '$CI_COMMIT_REF_NAME == "development"'
      changes:
        - envBase.Dockerfile
        - bim2sim/plugins/PluginAixLib/requirements.txt
        - bim2sim/plugins/PluginAixLib/envAixLib.Dockerfile
        - requirements.txt
        - .gitlab-ci.yml

build_tool:release:
  <<: *docker_setup
  stage: build-tool
  script:
    - docker build -t $CI_REGISTRY/tool:latest .
    - docker push $CI_REGISTRY/tool:latest
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'

build_tool:development:
  <<: *docker_setup
  stage: build-tool
  script:
    - docker build -t $CI_REGISTRY/tool:development .
    - docker push $CI_REGISTRY/tool:development
  rules:
    - if: '$CI_COMMIT_REF_NAME == "development"'

build_tool:webdevelop:
  <<: *docker_setup
  stage: build-tool
  script:
    - docker build -t $CI_REGISTRY/tool:web_develop -f total.Dockerfile .
    - docker push $CI_REGISTRY/tool:web_develop
  rules:
    - if: '$CI_COMMIT_REF_NAME == "development"'

build_tool:cfd:
  <<: *docker_setup
  stage: build-tool
  script:
    - docker build -t $CI_REGISTRY/tool:cfd -f bim2sim/plugins/PluginCFD/cfd.Dockerfile .
    - docker push $CI_REGISTRY/tool:cfd
  rules:
    - if: '$CI_COMMIT_REF_NAME == "development"'
      changes:
        - bim2sim/plugins/PluginCFD/*

build_tool:teaser:
  <<: *docker_setup
  stage: build-tool
  script:
    - docker build -t $CI_REGISTRY/tool:teaser -f bim2sim/plugins/PluginTEASER/teaser.Dockerfile .
    - docker push $CI_REGISTRY/tool:teaser
  rules:
    - if: '$CI_COMMIT_REF_NAME == "development"'
      changes:
        - bim2sim/plugins/PluginTEASER/*

build_tool:aixlib:
  <<: *docker_setup
  stage: build-tool
  script:
    - docker build -t $CI_REGISTRY/tool:aixlib -f bim2sim/plugins/PluginAixLib/aixlib.Dockerfile .
    - docker push $CI_REGISTRY/tool:aixlib
  rules:
    - if: '$CI_COMMIT_REF_NAME == "development"'
      changes:
        - bim2sim/plugins/PluginAixLib/*
