stages:
  - doc
  - deploy

sphinxdoc:
  image: registry.git.rwth-aachen.de/ebc/ebc_all/gitlab_ci/templates:python-latest
  stage: doc

  before_script:
    - source activate python37
    - pip install --upgrade pip
    - test -e requirements.txt && pip install -r requirements.txt || echo no requirements to install
    - test -e setup.py && pip install -e . || echo no setup.py found
    - pip install sphinx anybadge sphinx-rtd-theme
    - pip install m2r2
    
  script:
    - mkdir -p $CI_COMMIT_REF_NAME/docs
    - sphinx-apidoc -o ./docs/source ./  # create rst files for all python files 
    - sphinx-build -b html docs/source $CI_COMMIT_REF_NAME/docs
    - anybadge --value="passing" --file=$CI_COMMIT_REF_NAME/docs/doc.svg --label documentation

  artifacts:
    paths:
    - $CI_COMMIT_REF_NAME/docs
    expire_in: 2 hrs


# pages:
#   # Remove all present files to ensure not to overstep artifact size
#   image: ubuntu:latest
#   stage: deploy
#   before_script:
#   - apt-get update -y
#   script:
#     - mkdir -p public/$CI_COMMIT_REF_NAME
#     - cp -r $CI_COMMIT_REF_NAME/* public/$CI_COMMIT_REF_NAME
#   only:
#     - master
#     - development
#     - 113-add-Sphinx
#   artifacts:
#     paths:
#       - public


pages:
# Page to generate content to be downloaded in the artifact-section.
  image: ubuntu:latest
  stage: deploy
  before_script:
    - apt-get update -y
    - apt-get install zip unzip -y
  script:
    - set +e
    - curl --fail --header "PRIVATE-TOKEN:$GL_TOKEN" $CI_PAGES_URL/content.zip -o content.zip
    - if [ -e "content.zip" ]; then unzip "content.zip"; rm "content.zip"; fi
    - set -e
    # Add/update content
    # TODO: mv $CI_COMMIT_REF_NAME/* to public/$CI_COMMIT_REF_NAME/*
    - mkdir -p public/$CI_COMMIT_REF_NAME
    - cp -r $CI_COMMIT_REF_NAME/* public/$CI_COMMIT_REF_NAME
    # Zip the content and publish the zip again
    - zip -r "content.zip" "public"
    - mv "content.zip" "public/"
  except:
    - master
    - development
    - 113-add-Sphinx
  artifacts:
    paths:
      - public
      # Make the minor documentation expire in a reasonable development time
    expire_in: 2 weeks


