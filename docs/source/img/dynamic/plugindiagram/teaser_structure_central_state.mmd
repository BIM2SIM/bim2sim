---
title: plugin TEASER
---
flowchart TB
    
state[("state:
project
data storage")]

subgraph taskLoadIFC["task LoadIFC"]
 subgraph "" 

  tLoadIFC["bim2sim > tasks > common >  
 LoadIFC"]
  extLoadIFC(" Load all IFC files from PROJECT. " )
 end

end
    
tLoadIFC -- ifc_files --> state

subgraph taskCreateElementsOnIfcTypes["task CreateElementsOnIfcTypes"]
 subgraph "" 

  tCreateElementsOnIfcTypes["bim2sim > tasks > common >  
 CreateElementsOnIfcTypes"]
  extCreateElementsOnIfcTypes(" Create bim2sim elements based on information of
IFC types. " )
 end

end
    
tCreateElementsOnIfcTypes -- elements, _initial_elements, ifc_files --> state

state -- ifc_files --> tCreateElementsOnIfcTypes 

subgraph taskCreateSpaceBoundaries["task CreateSpaceBoundaries"]
 subgraph "" 

  tCreateSpaceBoundaries["bim2sim > tasks > bps >  
 CreateSpaceBoundaries"]
  extCreateSpaceBoundaries(" Create space boundary elements from ifc. " )
 end

end
    
state -- ifc_files, elements --> tCreateSpaceBoundaries 

subgraph taskAddSpaceBoundaries2B["task AddSpaceBoundaries2B"]
 subgraph "" 

  tAddSpaceBoundaries2B["bim2sim > tasks > bps >  
 AddSpaceBoundaries2B"]
  extAddSpaceBoundaries2B(" Fill gaps in set of space boundary per space with
2B space boundaries. " )
 end

end
    
tAddSpaceBoundaries2B -- elements --> state

state -- elements --> tAddSpaceBoundaries2B 

subgraph taskCorrectSpaceBoundaries["task CorrectSpaceBoundaries"]
 subgraph "" 

  tCorrectSpaceBoundaries["bim2sim > tasks > bps >  
 CorrectSpaceBoundaries"]
  extCorrectSpaceBoundaries(" Advanced geometric preprocessing for Space
Boundaries. " )
 end

end
    
state -- elements --> tCorrectSpaceBoundaries 

subgraph taskCreateRelations["task CreateRelations"]
 subgraph "" 

  tCreateRelations["bim2sim > tasks > common >  
 CreateRelations"]
  extCreateRelations(" Relations of elements, run() method holds detailed
information. " )
 end

end
    
state -- elements --> tCreateRelations 

subgraph taskDisaggregationCreationAndTypeCheck["task DisaggregationCreationAndTypeCheck"]
 subgraph "" 

  tDisaggregationCreationAndTypeCheck["bim2sim > tasks > bps >  
 DisaggregationCreationAndTypeCheck"]
  extDisaggregationCreationAndTypeCheck(" Disaggregation of elements, run() method holds
detailed information. " )
 end

end
    
state -- elements --> tDisaggregationCreationAndTypeCheck 

subgraph taskEnrichMaterial["task EnrichMaterial"]
 subgraph "" 

  tEnrichMaterial["bim2sim > tasks > bps >  
 EnrichMaterial"]
  extEnrichMaterial(" Enriches material properties that were recognized
as invalid LOD. " )
 end

end
    
state -- elements --> tEnrichMaterial 

subgraph taskEnrichUseConditions["task EnrichUseConditions"]
 subgraph "" 

  tEnrichUseConditions["bim2sim > tasks > bps >  
 EnrichUseConditions"]
  extEnrichUseConditions(" Enriches Use Conditions of thermal zones based on
decisions and translation of zone names. " )
 end

end
    
state -- elements --> tEnrichUseConditions 

subgraph taskCombineThermalZones["task CombineThermalZones"]
 subgraph "" 

  tCombineThermalZones["bim2sim > tasks > bps >  
 CombineThermalZones"]
  extCombineThermalZones(" Combine thermal zones to reduce the amount of
thermal zones. " )
 end

end
    
state -- elements --> tCombineThermalZones 

subgraph taskWeather["task Weather"]
 subgraph "" 

  tWeather["bim2sim > tasks > common >  
 Weather"]
  extWeather(" Task to get the weather file for later simulation. " )
 end

end
    
tWeather -- weather_file --> state

state -- elements --> tWeather 

subgraph taskLoadLibrariesTEASER["task LoadLibrariesTEASER"]
 subgraph "" 

  tLoadLibrariesTEASER[" 
 LoadLibrariesTEASER"]
  extLoadLibrariesTEASER(" Load AixLib library for export. " )
 end

end
    
tLoadLibrariesTEASER -- libraries --> state

subgraph taskCreateTEASER["task CreateTEASER"]
 subgraph "" 

  tCreateTEASER["bim2sim > plugins > PluginTEASER > 
bim2sim_teaser > task >  
 CreateTEASER"]
  extCreateTEASER(" Creates the TEASER project, run() method holds
detailed information. " )
 end

end
    
tCreateTEASER -- teaser_prj, bldg_names, orig_heat_loads, orig_cool_loads --> state

state -- libraries, elements, weather_file --> tCreateTEASER 

subgraph taskSerializeTEASER["task SerializeTEASER"]
 subgraph "" 

  tSerializeTEASER["bim2sim > plugins > PluginTEASER > 
bim2sim_teaser > task >  
 SerializeTEASER"]
  extSerializeTEASER(" Creates the TEASER project, run() method holds
detailed information. " )
 end

end
    
state -- teaser_prj --> tSerializeTEASER 

subgraph taskSerializeElements["task SerializeElements"]
 subgraph "" 

  tSerializeElements["bim2sim > tasks > common >  
 SerializeElements"]
  extSerializeElements(" Serialize element structure, run() method holds
detailed information. " )
 end

end
    
tSerializeElements -- serialized_elements --> state

state -- elements --> tSerializeElements 

subgraph taskExportTEASER["task ExportTEASER"]
 subgraph "" 

  tExportTEASER["bim2sim > plugins > PluginTEASER > 
bim2sim_teaser > task >  
 ExportTEASER"]
  extExportTEASER(" Export TEASER prj, run() method holds detailed
information. " )
 end

end
    
state -- teaser_prj --> tExportTEASER 

subgraph taskSimulateModelEBCPy["task SimulateModelEBCPy"]
 subgraph "" 

  tSimulateModelEBCPy["bim2sim > plugins > PluginTEASER > 
bim2sim_teaser > task >  
 SimulateModelEBCPy"]
  extSimulateModelEBCPy(" Simulate TEASER model, run() method holds detailed
information. " )
 end

end
    
tSimulateModelEBCPy -- sim_results_path --> state

state -- bldg_names --> tSimulateModelEBCPy 

subgraph taskCreateResultDF["task CreateResultDF"]
 subgraph "" 

  tCreateResultDF["bim2sim > plugins > PluginTEASER > 
bim2sim_teaser > task >  
 CreateResultDF"]
  extCreateResultDF(" Creates result dataframe, run() method holds
detailed information. " )
 end

end
    
tCreateResultDF -- df_finals --> state

state -- sim_results_path, bldg_names, elements --> tCreateResultDF 

subgraph taskPlotBEPSResults["task PlotBEPSResults"]
 subgraph "" 

  tPlotBEPSResults["bim2sim > tasks > bps >  
 PlotBEPSResults"]
  extPlotBEPSResults(" Class for plotting results of BEPS. " )
 end

end
    
state -- df_finals, sim_results_path, ifc_files, elements --> tPlotBEPSResults 
taskLoadIFC --> taskCreateElementsOnIfcTypes 
taskCreateElementsOnIfcTypes --> taskCreateSpaceBoundaries 
taskCreateSpaceBoundaries --> taskAddSpaceBoundaries2B 
taskAddSpaceBoundaries2B --> taskCorrectSpaceBoundaries 
taskCorrectSpaceBoundaries --> taskCreateRelations 
taskCreateRelations --> taskDisaggregationCreationAndTypeCheck 
taskDisaggregationCreationAndTypeCheck --> taskEnrichMaterial 
taskEnrichMaterial --> taskEnrichUseConditions 
taskEnrichUseConditions --> taskCombineThermalZones 
taskCombineThermalZones --> taskWeather 
taskWeather --> taskLoadLibrariesTEASER 
taskLoadLibrariesTEASER --> taskCreateTEASER 
taskCreateTEASER --> taskSerializeTEASER 
taskSerializeTEASER --> taskSerializeElements 
taskSerializeElements --> taskExportTEASER 
taskExportTEASER --> taskSimulateModelEBCPy 
taskSimulateModelEBCPy --> taskCreateResultDF 
taskCreateResultDF --> taskPlotBEPSResults 
